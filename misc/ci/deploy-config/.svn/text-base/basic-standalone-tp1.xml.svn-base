<!--@param ${install.package.fullname}: The path where place software package.-->
<!--@param ${deploy.file.fullname}: The file full path where deploy file name for test -->

<!--@param ${test.reports.path}: The path where test reports directory. -->
<!--@param ${deploy.case.fullname}:all kind of test environment. -->
<!--@param ${WORKSPACE}: where the working space is it-->
<!--@param ${deploy.conffile.wildcard}: deploy config file wildcard. just for debug -->
<!--@param ${test.environment} : the control the test Environment -->
<!--@param ${ci.script.file.path} : where the ci.test.properties file is it -->

<!-- hostname:jenkins.master.ip -->
<!-- depends:deploy-test-all.xml -->
<!-- call:deploy-software-in-host.xml,deploy-test-in-host.xml,test-type.xml -->

<project name="Standalone" default="Standalone"> 
	<property name="properties.dir" value="${basedir}/../ci.test.properties" />
	<property file="${properties.dir}" />
	<taskdef resource="com/sequoiadb/ant/ant-sdbtasks.xml">
		<classpath>
			<pathelement location="${WORKSPACE}/deploy/ant-sdbtasks/ant-sdbtasks.jar" />
		</classpath>
	</taskdef> 

	<target name="Deploy" depends="">
		<ant antfile="deploy-software-in-host.xml" dir="." inheritAll="false">
			<property name="install.package.fullname" value="${install.package.fullname}" />
			<property name="deploy.host.name" value="${test.machine.no2.basic}" />
			<property name="is.standalone.mode" value="true" />
			<property name="is.coord.master" value="false"/>
			<property name="catalog.addrs" value="${test.machine.no1.data}:30003,${test.machine.no2.data}:30003,${test.machine.no3.data}:30003" />
		</ant>
	</target>

	<target name="Standalone" depends="">
		<hostinfo prefix="host" />
		<property name="test-type-list" value="basic,driver-C,driver-CPP" />
		<property name="copy.test.log" value="true"/>
		<!-- <property name="import.file.name" value="basic-testcases-time.json" /> -->

		<parallel>
			<ant antfile="deploy-test-in-host.xml" dir="." inheritAll="false">
				<property name="deploy.file.fullname" value="${deploy.file.fullname}" />
				<property name="deploy.host.name" value="${test.machine.no2.basic}" />
			</ant>
		</parallel>

		<!-- <basename property="antFileName" file="${ant.file}" suffix=".xml" /> -->
		<for list="${test-type-list}" param="Test-Type">
			<sequential>
				<ant antfile="${WORKSPACE}/sequoiadb/misc/ci/test-type.xml" dir="." inheritAll="false">
					<!-- <property name="test.machine.deploy.path" value="${test.machine.deploy.path}" />
					<property name="install.path" value="${install.path}" /> -->
					<property name="deploy.case.fullname" value="${deploy.case.fullname}" />
					<property name="test.reports.path" value="${test.reports.path}" />
					<property name="Test-Type" value="@{Test-Type}" />
					<property name="deploy.conffile.wildcard" value="unparallel" />
					<!-- <property name="antFileName" value="${antFileName}" /> -->
					<!-- <property name="import.file.name" value="${import.file.name}" /> -->
					<property name="parallel.flag" value="unparallel" />
					<property name="WORKSPACE" value="${WORKSPACE}" />
					<property name="ci.script.file.path" value="${ci.script.file.path}" />
					<property name="test.host.NAME" value="${test.machine.no2.basic}" />
					<property name="parallel.count" value="0" />
				</ant>
			</sequential>
		</for>

		<trycatch>
			<try>
				<if>
					<equals arg1="${copy.test.log}" arg2="true" />
					<then>
						<echo message="The copy.test.log is true , then copy all test log to ${save.testLog.hostname}:${save.testLog.dir}"/>
						<tstamp>
							<format property="current.time.log" pattern="yyyy-MM-dd-hh.mm.ss a" />
						</tstamp>

						<property name="test.log.path" value="${WORKSPACE}/reports/${test.environment}-${deploy.conffile.wildcard}-${host.NAME}-${current.time.log}-${BUILD_NUMBER}" />
						<echo message="Mkdir ${test.log.path}" />
						<mkdir dir="${test.log.path}" />

						<echo message="It's the standalone mod..." />
						<sdbCopyAndTar fileHostName="${test.machine.no2.basic}" saveHostName="${host.NAME}" diaglogPath="${install.path}/sequoiadb/database" savePath="${test.log.path}" />

						<sdbCopyAndTar fileHostName="${test.machine.no2.basic}" saveHostName="${host.NAME}" diaglogPath="${install.path}/sequoiadb/conf/local" savePath="${test.log.path}/${test.config.file}" />

						<echo message="Tar ${test.log.path}.tar.gz..." />
						<tar basedir="${WORKSPACE}/reports" destfile="${test.log.path}.tar.gz" compression="gzip" includes="**/*" />
	
						<stafTools workType="copy" workHost="${host.NAME}" fileName="${test.log.path}.tar.gz"  toHost="${save.testLog.hostname}"  saveDir="${save.testLog.dir}" />
						<sdbProperty name="delete.diaglogFile" value="dir=$(find /opt/sequoiadb/database -name diaglog); for d in $dir ; do echo rm -f $d/* ; rm -f $d/* ; done" />

						<stafTools workType="shell" workHost="${test.machine.no2.basic}" workDir="${install.path}/sequoiadb/database" common="${delete.diaglogFile}" failonerror="false" />

						<echo message="Delete ${test.log.path}.tar.gz and ${test.log.path} dir ..." />
						<delete file="${test.log.path}.tar.gz" failonerror="false" />
						<delete dir="${test.log.path}" failonerror="false"/>
					</then>
				</if>
			</try>
			<catch>
				<echo message="copy log for download code fail" />
			</catch>
			<finally>
			</finally>
		</trycatch>
	</target>	
</project>