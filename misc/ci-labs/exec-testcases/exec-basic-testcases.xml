<!--@param ${basic.testcase.path}: The path where test case direcotry.-->

<!--@param ${antTask.jar.path}: The antTask.jar's path.-->
<!--@param ${reports.path}: The path where test case direcotry.-->
<!--@param ${test.package.name}: The name of test package name,.-->
<!--@param ${parallel.num}:  The parallel number when parallel in same host.-->
<!--@param ${excludes.dir.patterns}: A comma- or space-sparated list of patterns of directories that must be excluded.-->
<!--@param ${ci.properties.path}: where is the ci.properties file -->
<!--@param ${report.suffix}:this is for long time test, default is NULL-->

<!--@param ${WORKSPACE}: where the working space is it-->
<!--@param ${ci.script.file.path} : where the ci.test.properties file is it -->

<project name="Exec-Basic-Testcases" default="Test-Basic-Testcases">
	<hostinfo prefix="host" />
	<property file="${ci.properties.path}" />
	<property name="sdb.fullname" value="${install.path}/sequoiadb/bin/sdb" />
	<property name="import.file" value="${host.NAME}-testcases-time.json" />
	<property name="import.cmd" value="ant -l deploy-test-result.log -f deploy-test-result.xml -Dant.sdb.tasks.path=${antTask.jar.path} -Dproperties.dir=${ci.properties.path} -Dcoord.service.port=11810 -Dcs.name=basic_testcases -Dcl.name=year_2014 -Dimport.file=${import.file}" />
	<property name="delete.uninstall.config" value="find /tmp -name 'bitrock_installer*.log' -delete" />
	<taskdef resource="com/sequoiadb/ant/ant-sdbtasks.xml">
		<classpath>
			<fileset dir="${antTask.jar.path}" includes="*.jar" />
		</classpath>
	</taskdef>

	<target name="Clean-Basic-Reports" depends="">
		<echo message="Reports' path is ${reports.path}" />
		<delete dir="${reports.path}" failonerror="false" />
		<mkdir dir="${reports.path}" />
		<stafTools worktype="delete" workHost="bl465-4" fileName="${install.path}/${import.file}" failonerror="false" />
		<stafTools worktype="delete" workHost="${host.NAME}" fileName="${install.path}/${import.file}" failonerror="false" />
		<stafTools worktype="shell" workHost="${host.NAME}" workDir="/tmp" common="${delete.uninstall.config}" failonerror="false" />
		<echo message="Clean deploy result reports compeleted." />
	</target>

	<target name="Test-Basic-Samples" depends="">
		<echo message="Begin test basic samples testcases..." />
		<echo message="Perform the basic samples testcases,with testcase.path=${samples.testcase.path}/JS" />
		<foreach target="test-one-suite" param="test.suite.fullname">
			<path>
				<dirset dir="${samples.testcase.path}/JS" includes="${includes.dir.patterns}" excludes="${excludes.dir.patterns}" />
			</path>
			<param name="testcases.path" value="${samples.testcase.path}/JS" />
			<param name="test-type" value="samples-basic" />
			<param name="includes.case.patterns" value="*.js" />
			<param name="excludes.case.patterns" value="" />
		</foreach>
	</target>

	<target name="Test-Basic-Testcases" depends="Clean-Basic-Reports">
		<echo message="Begin test basic testcases..." />
		<echo message="Perform the basic testcases,with testcase.path=${basic.testcase.path}/js" />

		<property name="sdb.cmd.allPrepare" value=" -e &quot;var COORDSVCNAME=${coord.service.port};&quot; -f &quot;${basic.testcase.path}/libs/func.js,${basic.testcase.path}/libs/all_prepare.js&quot;" />
		<echo message="Exec:${sdb.fullname} ${sdb.cmd.allPrepare}" />
		<exec executable="${sdb.fullname}" dir="" timeout="100000" outputproperty="allPrepare.screen.output"  resultproperty="allPrepare.ret.code">
			<arg line="${sdb.cmd.allPrepare}" />
		</exec>
		<echo message="${allPrepare.screen.output}" />

		<foreach target="test-one-suite" param="test.suite.fullname" >
			<path>
				<dirset dir="${basic.testcase.path}/js" includes="${includes.dir.patterns}" excludes="${excludes.dir.patterns}" />
			</path>
			<param name="testcases.path" value="${basic.testcase.path}" />
			<param name="test-type" value="basic" />
			<param name="includes.case.patterns" value="*.js" />
			<param name="excludes.case.patterns" value="commlib.js" />
		</foreach>

		<property name="sdb.cmd.allClean" value=" -e &quot;var COORDSVCNAME=${coord.service.port};&quot; -f &quot;${basic.testcase.path}/libs/func.js,${basic.testcase.path}/libs/all_clean.js&quot;" />
		<echo message="Exec:${sdb.fullname} ${sdb.cmd.allClean}" />
		<exec executable="${sdb.fullname}" dir="" timeout="100000" outputproperty="allClean.screen.output" resultproperty="allClean.ret.code">
			<arg line="${sdb.cmd.allClean}" />
		</exec>
		<echo message="${allClean.screen.output}" />

		<stafTools workType="copy" workHost="${host.NAME}" fileName="${install.path}/${import.file}"  toHost="bl465-4" saveDir="${install.path}" />
		<stafTools workType="shell" workHost="${host.NAME}" workDir="${test.machine.software.path}" common="${import.cmd}" failonerror="false" />
		<stafTools workType="get" workHost="${host.NAME}" fileName="${test.machine.software.path}/deploy-test-result.log" />
	</target>

	<target name="test-one-suite" depends="">
		<basename property="test.suite.name" file="${test.suite.fullname}" />
		<basename property="deploy.name" file="${deploy.case.fullname}" suffix=".xml" />
		<property name="test.suite.class.name" value="testcases-${test-type}.${deploy.name}-${host.NAME}-${parallel.num}-${test.suite.name}" />

		<echo message="Now testsuite ${test.suite.name} ..." />
		<echo file="${reports.path}/TEST-${test.suite.class.name}.xml" message="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&#10;&lt;testsuite name=&quot;${test.suite.name}&quot; type=&quot;${test-type}&quot; deploy=&quot;${deploy.name}&quot; hostname=&quot;${host.NAME}&quot; tests=&quot;1&quot; failure=&quot;0&quot;&gt;&#10;" />

		<available property="commlib.exist" file="${test.suite.fullname}/commlib.js" />
		<if>
			<isset property="commlib.exist" />
			<then>
				<echo message="${test.suite.fullname}/commlib is exist , then test will add it " />
				<sdbProperty name="commlib.option" value="${test.suite.fullname}/commlib.js" />
			</then>	
			<else>
				<echo message="${test.suite.fullname}/commlib is not exist , then test will not add it" />
				<sdbProperty name="commlib.option" value="" />
			</else>
		</if>

		<foreach target="test-one-case" param="test.case.fullname">
			<fileset dir="${test.suite.fullname}" includes="${includes.case.patterns}" excludes="${excludes.case.patterns}" />
			<param name="testcases.path" value="${testcases.path}" />
			<param name="test-type" value="${test-type}" />
			<param name="test.suite.class.name" value="${test.suite.class.name}" />

			<param name="host.NAME" value="${host.NAME}" />
			<param name="commlib.option" value="${commlib.option}" />
			<param name="test.suite.name" value="${test.suite.name}" />
			<param name="deploy.name" value="${deploy.name}" />
		</foreach>

		<echo file="${reports.path}/TEST-${test.suite.class.name}.xml" message="&lt;/testsuite&gt;&#10;" append="true" />
	</target>

	<target name="test-one-case" depends="">
		<exec executable="${sdb.fullname}" timeout="100000" dir="" outputproperty="db.RG.info" resultproperty="ret.code.forShards">
			<arg line=" -s &quot; db = new Sdb('localhost',${coord.service.port});var rg = db.listReplicaGroups();println(rg);db.close(); &quot;" />
		</exec>
		<if>
			<not>
				<equals arg1="${ret.code.forShards}" arg2="0" />
			</not>
			<then>
				<sdbProperty name="db.RG.info" value="this env is standalone , host is ${test.machine.no2.basic}"/>
			</then>
		</if>
		
		<tstamp>
			<format property="testcase.begin.time" pattern="yyyy-MM-dd-hh.mm.ss" />
		</tstamp>

		<basename property="test.case.name" file="${test.case.fullname}" suffix=".js" />
		<exec executable="sed">
			<arg line="-i 's/^\xEF\xBB\xBF//g'  ${test.case.fullname}"/>
		</exec>
		<exec executable="sed">
			<arg line="-i 's/^\xEF\xBB\xBF//g'  ${testcases.path}/libs/func.js"/>
		</exec>
		<echo message="Now testcase ${test.case.name}.js begin with ${testcase.begin.time}"/>

		<sdbprefix prefixName="CS_PRIX">
			<param name="${host.NAME}" value="${host.NAME}" />
			<param name="${test.case.name}" value="${test.case.name}" />
			<param name="${parallel.num}" value="${parallel.num}" />
			<!-- <param name="${parallel.count}" value="${parallel.count}" /> -->
		</sdbprefix>

		<echo message="################################################" />
		<echo message="CS_PRIX=${CS_PRIX}" />
		<echo message="################################################" />

		<sdbProperty name="testBeginStr" value="begin test,file is ${test.case.fullname}" />
		<sdbProperty name="testEndStr" value="over test,file is ${test.case.fullname}" />
		<exec executable="${sdb.fullname}" dir="" timeout="100000">
			<arg line=" -s &quot; db = new Sdb('localhost',${coord.service.port});db.msg('${testBeginStr}');db.close(); &quot;" />
		</exec>

		<if>
			<equals arg1="${test-type}" arg2="basic" />
			<then>
				<property name="sdb.cmd.beforeTestcase" value=" -e &quot; var COORDSVCNAME='${coord.service.port}' ;&quot; -f &quot;${testcases.path}/libs/func.js,${testcases.path}/libs/before_usecase.js&quot;" />
				<echo message="Exec:${sdb.fullname}${sdb.cmd.beforeTestcase}" />
				<exec executable="${sdb.fullname}" dir="" timeout="900000" outputproperty="beforeTestcase.screen.output" resultproperty="beforeTestcase.ret.code">
					<arg line="${sdb.cmd.beforeTestcase}" />
				</exec>
				<echo message="${beforeTestcase.screen.output}" />

				<property name="sdb.cmd.argument" value=" -e &quot;var CSPREFIX='${CS_PRIX}';var COORDSVCNAME='${coord.service.port}';&quot; -f &quot;${testcases.path}/libs/func.js,${commlib.option},${test.case.fullname}&quot;" />
				<property name="command" value="${sdb.fullname}${sdb.cmd.argument}" />
				<echo message="Command:${command}" />
				<echo message="The testcase ${test.case.fullname} path on ${testcases.path}" />
				<exec executable="${sdb.fullname}" dir="" timeout="900000" outputproperty="screen.output" resultproperty="ret.code" failonerror="false">
					<arg line="${sdb.cmd.argument}" />
				</exec>
				<echo message="${screen.output}" />
				
				<property name="sdb.cmd.afterTestcase" value=" -e &quot; var COORDSVCNAME='${coord.service.port}' ;&quot; -f &quot;${testcases.path}/libs/func.js,${testcases.path}/libs/after_usecase.js&quot;" />
				<echo message="Exec:${sdb.fullname} ${sdb.cmd.afterTestcase}" />
				<exec executable="${sdb.fullname}" dir="" timeout="900000" outputproperty="afterTestcase.screen.output" resultproperty="afterTestcase.ret.code">
					<arg line="${sdb.cmd.afterTestcase}" />
				</exec>
				<echo message="${afterTestcase.screen.output}" />
			</then>
			<else>
				<property name="sdb.cmd.argument" value=" -e &quot;var CSPREFIX='${CS_PRIX}';var COORDSVCNAME='${coord.service.port}';&quot; -f &quot;${commlib.option},${test.case.fullname}&quot;" />
				<property name="command" value="${sdb.fullname}${sdb.cmd.argument}" />
				<echo message="Command:${command}" />
				<echo message="The testcase ${test.case.fullname} path on ${testcases.path}" />
				<exec executable="${sdb.fullname}" dir="" timeout="900000" outputproperty="screen.output" resultproperty="ret.code" failonerror="false">
					<arg line="${sdb.cmd.argument}" />
				</exec>
				<echo message="${screen.output}" />
			</else>
		</if>
		<exec executable="${sdb.fullname}" dir="" timeout="100000">
			<arg line=" -s &quot; db = new Sdb('localhost',${coord.service.port});db.msg('${testEndStr}');db.close(); &quot;" />
		</exec>

		<if>
			<not>
				<equals arg1="${ret.code}" arg2="0" />
			</not>
			<then>
				<tstamp>
					<format property="testcase.failure.end.time" pattern="yyyy-MM-dd-hh.mm.ss" />
				</tstamp>
				<sdbTime beginTime="${testcase.begin.time}" endTime="${testcase.failure.end.time}" output="testcase.failure.timeOutput" />
				<echo message="The result code is ${ret.code} and it's fail ..." />
				<echo message="The testcase ${test.case.name}.js end with ${testcase.failure.end.time} and cost ${testcase.failure.timeOutput} s in total..." />

				<echo file="${reports.path}/TEST-${test.suite.class.name}.xml" append="true" message="&lt;testcase classname=&quot;${test.suite.class.name}&quot; name=&quot;${test.case.name}&quot; begin_time=&quot;${testcase.begin.time}&quot; end_time=&quot;${testcase.failure.end.time}&quot; time=&quot;${testcase.failure.timeOutput}&quot; path=&quot;${testcases.path}&quot; status=&quot;fail&quot;&gt;&#10;&lt;failure&gt;&#10;&lt;![CDATA[&#10;COMMAND= ${command}&#10;RETURNCODE=${ret.code}&#10;ERRORMESSAGE=&#10;${screen.output}&#10;TESTBEGINSTR=${testBeginStr}&#10;TESTENDSTR=${testEndStr}&#10;DB.LISTREPLICAGROUP:&#10;${db.RG.info}]]&gt;&#10;&lt;/failure&gt;&#10;&lt;/testcase&gt;&#10;" />

				<echo file="${install.path}/${import.file}" append="true" message="{testcase_name:&quot;${test.suite.name}-${test.case.name}&quot;,deploy:&quot;${deploy.name}&quot;,hostname:&quot;${host.NAME}&quot;,time:&quot;${testcase.timeOutput}&quot;,status:&quot;fail&quot;,begin_time:&quot;${testcase.begin.time}&quot;,end_time:&quot;${testcase.end.time}&quot;}&#10;&#10;&#10;" />
			</then>
			<else>
				<tstamp>
					<format property="testcase.end.time" pattern="yyyy-MM-dd-hh.mm.ss" />
				</tstamp>
				<sdbTime beginTime="${testcase.begin.time}" endTime="${testcase.end.time}" output="testcase.timeOutput" />
				<echo message="The result code is ${ret.code} and it's succ ..." />
				<echo message="The testcase ${test.case.name}.js end with ${testcase.end.time} and cost ${testcase.timeOutput} s in total..." />

				<echo file="${reports.path}/TEST-${test.suite.class.name}.xml" append="true" message="&lt;testcase classname=&quot;${test.suite.class.name}&quot; name=&quot;${test.case.name}&quot; begin_time=&quot;${testcase.begin.time}&quot; end_time=&quot;${testcase.end.time}&quot; time=&quot;${testcase.timeOutput}&quot; path=&quot;${testcases.path}&quot; status=&quot;succ&quot;&gt;&#10;&lt;/testcase&gt;&#10;" />

				<echo file="${install.path}/${import.file}" append="true" message="{testcase_name:&quot;${test.suite.name}-${test.case.name}&quot;,deploy:&quot;${deploy.name}&quot;,hostname:&quot;${host.NAME}&quot;,time:&quot;${testcase.timeOutput}&quot;,status:&quot;succ&quot;,begin_time:&quot;${testcase.begin.time}&quot;,end_time:&quot;${testcase.end.time}&quot;}&#10;&#10;&#10;" />
			</else>
		</if>

		<sdbHaveMaster waitTime="10" propertyName="haveMaster" groupName="1" hostName="localhost" failonerror="false" />
		<echo message="${haveMaster}" />
		<if>
			<equals arg1="${haveMaster}" arg2="true"/>
			<then>
				<echo message="haveMaster is true"/>
				<sdbClearEnvCS hostName="localhost" port="50000" csprefix="${CS_PRIX}"/>
			</then>
			<else>
				<echo message="test is failed , CS_PRIX is ${CS_PRIX} , but when drop the cs , there are no catalog master node" />
			</else>
		</if>
	</target>
</project>